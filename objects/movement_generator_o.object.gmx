<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Ritual movement sprites
TOP_LEFT = paje_tl_s;
TOP_RIGHT = paje_tr_s;
TOP_MIDDLE = paje_tm_s;
CENTER_LEFT = paje_cl_s;
CENTER_RIGHT = paje_cr_s;
CENTER_MIDDLE = paje_cm_s;
BOT_LEFT = paje_bl_s;
BOT_RIGHT = paje_br_s;
BOT_MIDDLE = paje_bm_s;
WRONG = char1_wrong_s;

// Ritual movements and the current movement being displayed
ritual_list = generate_new_moves();
current_movement = 0;
current_alpha = 1;
wrong_mask_alpha = 0;

// Initialize movement counter
alarm[0] = get_time_to_expire();
alarm[1] = ALPHA_UPDATE;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>self.current_alpha -= ALPHA_UPDATE/(get_time_to_expire()+ALPHA_UPDATE);
alarm[1] = ALPHA_UPDATE;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset ritual if player took too long
self.current_movement = 0;
alarm[0] = get_time_to_expire();
current_alpha = 1;
audio_play_sound(got_it_wrong_snd, 1, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if self.wrong_mask_alpha &gt; 0 {
    self.wrong_mask_alpha -= 1/room_speed;
} else {
    self.wrong_mask_alpha = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Get movement sprite
var current_spr = get_move_animation(get_current_ritual_move());
var spr_scale = 0.25;
var space = 20;
var sw = sprite_get_width(current_spr) * spr_scale + space;
var sh = sprite_get_height(current_spr) * spr_scale + space;

// Draw error mask if needed
if self.wrong_mask_alpha &gt; 0 {
    draw_set_color(c_red);
    draw_set_alpha(self.wrong_mask_alpha);
    draw_rectangle(x-sw/2,y-sh/2,x+sw/2,y+sh/2,false);
    draw_set_alpha(1);
}

// Draw movement sprite
draw_sprite_ext(current_spr, image_index, x, y, spr_scale, spr_scale, 0, c_white, current_alpha);

// Draw border
var border_xs = sw / sprite_get_width(border_s); // Border X Scale
var border_ys = sh / sprite_get_height(border_s); // Border Y Scale
draw_sprite_ext(border_s, 0, x, y, border_xs, border_ys, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
